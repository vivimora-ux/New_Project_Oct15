export declare const configs: {
    'flat/recommended': {
        languageOptions: {
            globals: {
                readonly $: false;
                readonly $$: false;
                readonly browser: false;
                readonly driver: false;
                readonly expect: false;
                readonly multiremotebrowser: false;
            };
        };
        plugins: {
            wdio: {
                configs: {};
                rules: {
                    'await-expect': import("eslint").Rule.RuleModule;
                    'no-debug': import("eslint").Rule.RuleModule;
                    'no-pause': import("eslint").Rule.RuleModule;
                };
            };
        };
        rules: {
            readonly 'wdio/await-expect': "error";
            readonly 'wdio/no-debug': "error";
            readonly 'wdio/no-pause': "error";
        };
    };
    recommended: {
        globals: {
            readonly $: false;
            readonly $$: false;
            readonly browser: false;
            readonly driver: false;
            readonly expect: false;
            readonly multiremotebrowser: false;
        };
        plugins: string[];
        rules: {
            readonly 'wdio/await-expect': "error";
            readonly 'wdio/no-debug': "error";
            readonly 'wdio/no-pause': "error";
        };
    };
};
export declare const rules: {
    'await-expect': import("eslint").Rule.RuleModule;
    'no-debug': import("eslint").Rule.RuleModule;
    'no-pause': import("eslint").Rule.RuleModule;
};
//# sourceMappingURL=index.d.ts.map